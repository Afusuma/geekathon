AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SmartLabel AI API - Steel Thread

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs20.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        NODE_ENV: !Ref Environment
        LABELS_TABLE: !Ref LabelsTable

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod

Resources:
  # DynamoDB Table for Labels
  LabelsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'SmartLabel-Labels-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: labelId
          AttributeType: S
        - AttributeName: productId
          AttributeType: S
      KeySchema:
        - AttributeName: labelId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: by-product
          KeySchema:
            - AttributeName: productId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  # Hello World Lambda for Steel Thread
  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: hello.handler
      Events:
        HelloApi:
          Type: Api
          Properties:
            Path: /hello
            Method: get
            Cors:
              AllowMethods: "'GET,POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

  # Generate Label Lambda Function
  GenerateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/handlers/
      Handler: generate.handler
      Timeout: 15
      MemorySize: 1024
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LabelsTable
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource:
                - arn:aws:bedrock:*:*:foundation-model/anthropic.claude-3-sonnet-20240229-v1:0
      Events:
        GenerateApi:
          Type: Api
          Properties:
            Path: /generate
            Method: post
            Cors:
              AllowMethods: "'POST,OPTIONS'"
              AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              AllowOrigin: "'*'"

Outputs:
  HelloApi:
    Description: "API Gateway endpoint URL for Hello function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  GenerateApi:
    Description: "API Gateway endpoint URL for Generate function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate/"

  LabelsTable:
    Description: "DynamoDB table for storing labels"
    Value: !Ref LabelsTable
    Export:
      Name: !Sub "${AWS::StackName}-LabelsTable"